# Generated 2021-04-18 from:
# /content/speechbrain_multiling/recipes/CommonVoice/LID/train/hparams/train_ecapa_embeddings.yaml
# yamllint disable
# ################################
# Model: Speaker identification with ECAPA
# Authors: Hwidong Na & Mirco Ravanelli
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [1986]
output_folder: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS
save_folder: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/save
train_log: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/train_log.txt

# Data files
data_folder: /content/common_voice_kpd
                           # e.g. /path/to/Voxceleb
train_annotation: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/save/train.csv
valid_annotation: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/save/dev.csv

# Use the following links for the official voxceleb splits:
# VoxCeleb1 (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/veri_test2.txt
# VoxCeleb1-H (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/list_test_hard2.txt
# VoxCeleb1-E (cleaned): https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/list_test_all2.txt.
# VoxCeleb1-E and VoxCeleb1-H lists are drawn from the VoxCeleb1 training set.
# Therefore you cannot use any files in VoxCeleb1 for training if you are using these lists for testing.
# verification_file: https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/veri_test2.txt

skip_prep: false
ckpt_interval_minutes: 30 # save checkpoint every N min

# Training parameters
number_of_epochs: 50
batch_size: 8
lr: 0.001
base_lr: 0.00000001
max_lr: 0.001
step_size: 65000
sample_rate: 16000
emb_dim: 192

# Feature parameters
n_mels: 80

# Number of speakers
n_lang_families: 24
n_languages: 45
out_neurons: 45 # Number of languages

# Dataloaders
train_dataloader_options:
  batch_size: 8
  drop_last: true
  shuffle: true

test_dataloader_options:
  batch_size: 8
  shuffle: true

# Feature extraction
compute_features: &id001 !new:speechbrain.lobes.features.Fbank
  n_mels: 80

# Mean and std normalization of the input features
mean_var_norm_input: &id002 !new:speechbrain.processing.features.InputNormalization
    # augment_wavedrop: !ref <augment_wavedrop>
    # augment_speed: !ref <augment_speed>
    # add_rev: !ref <add_rev>
    # add_noise: !ref <add_noise>
    # add_rev_noise: !ref <add_rev_noise>
  norm_type: sentence
  std_norm: false

# Embedding Model
embedding_model: &id003 !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
        # mean_var_norm_emb: !ref <mean_var_norm_emb>
  input_size: 80
  channels: [1024, 1024, 1024, 1024, 3072]
  kernel_sizes: [5, 3, 3, 3, 1]
  dilations: [1, 2, 3, 4, 1]
  attention_channels: 128
  lin_neurons: 192

classifier: &id004 !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier

  input_size: 192
  lin_blocks: 1
  lin_neurons: 192
  out_neurons: 45

epoch_counter: &id005 !new:speechbrain.utils.epoch_loop.EpochCounter

# Load pre-trained modules from HuggingFace
  limit: 50


# augment_wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
#     sample_rate: !ref <sample_rate>
#     speeds: [100]

# augment_speed: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
#     sample_rate: !ref <sample_rate>
#     speeds: [95, 100, 105]

# add_rev: !new:speechbrain.lobes.augment.EnvCorrupt
#     openrir_folder: !ref <data_folder>
#     openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 1.0
#     noise_prob: 0.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0

# add_noise: !new:speechbrain.lobes.augment.EnvCorrupt
#     openrir_folder: !ref <data_folder>
#     openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 0.0
#     noise_prob: 1.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0

# add_rev_noise: !new:speechbrain.lobes.augment.EnvCorrupt
#     openrir_folder: !ref <data_folder>
#     openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 1.0
#     noise_prob: 1.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0


# Definition of the augmentation pipeline.
# If concat_augment = False, the augmentation techniques are applied
# in sequence. If concat_augment = True, all the augmented signals
# # are concatenated in a single big batch.

# augment_pipeline: [
#     !ref <augment_wavedrop>,
#     !ref <augment_speed>,
#     !ref <add_rev>,
#     !ref <add_noise>,
#     !ref <add_rev_noise>
# ]
# concat_augment: True


modules:
  compute_features: *id001
  mean_var_norm_input: *id002
  embedding_model: *id003
  classifier: *id004
compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
  loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
    margin: 0.2
    scale: 30

compute_error: !name:speechbrain.nnet.losses.classification_error

opt_class: !name:torch.optim.Adam
  lr: 0.001
  weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
  base_lr: 0.00000001
  max_lr: 0.001
  step_size: 65000

# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/train_log.txt

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
    reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/save
  recoverables:
    embedding_model: *id003
    normalizer_input: *id002
    classifier: *id004
    counter: *id005
embedding_model_path: speechbrain/spkrec-ecapa-voxceleb/embedding_model.ckpt
# mean_var_norm_emb_path: speechbrain/spkrec-xvect-voxceleb/mean_var_norm_emb.ckpt

# Load fine-tuned modules from Drive
# embedding_model_path: /content/embedding_model.ckpt
# mean_var_norm_emb_path: /content/normalizer_emb.ckpt

# Pretrained ECAPA embeddings from SpeakerID on VoxCeleb
pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
  collect_in: /content/drive/MyDrive/IFT6758-AP/Project/FULL_ECAPA_EP_50_ECAPA_EMBS/save
  loadables:
    embedding_model: *id003
  paths:
    embedding_model: speechbrain/spkrec-ecapa-voxceleb/embedding_model.ckpt
        # mean_var_norm_emb: !ref <mean_var_norm_emb_path>
